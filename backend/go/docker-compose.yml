# @format

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pickleball_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pickleball-network

  # Go Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=pickleball_db
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - pickleball-network

  # Nginx Reverse Proxy
  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - pickleball-network

volumes:
  postgres_data:

networks:
  pickleball-network:
    driver: bridge
